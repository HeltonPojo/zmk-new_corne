#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33 34 42 43 44 45 46 47>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <7 8 9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41 45 46 47 42 43 44>;
            hold-trigger-on-release;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    macros {
        print: print {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp NUMBER_4 &kp LEFT_COMMAND &kp LEFT_SHIFT>;

            label = "PRINT";
        };

        noti: noti {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UNDER &kp S &kp O &kp C &kp I &kp A &kp L &kp DOT &kp UNDER &kp N &kp O &kp T &kp I &kp F &kp I &kp C &kp A &kp T &kp I &kp O &kp N &kp DOT &kp UNDER &kp C &kp R &kp E &kp A &kp T &kp E &kp LPAR &kp RBKT &kp R &kp E &kp C &kp I &kp P &kp I &kp E &kp N &kp T &kp COLON &kp SPACE &kp RBKT &kp SPACE &kp UNDER &kp I &kp D &kp COLON &kp SPACE &kp UNDER &kp U &kp S &kp E &kp R &kp DOT &kp UNDER &kp I &kp D &kp RBRC &kp COMMA &kp S &kp U &kp B &kp J &kp E &kp C &kp T &kp COLON &kp SPACE &kp UNDER &kp U &kp T &kp I &kp L &kp S &kp DOT &kp S &kp T &kp R &kp I &kp N &kp G &kp I &kp F &kp Y &kp LS(A) &kp S &kp LS(J) &kp S &kp O &kp N &kp LPAR &kp RPAR &kp RBRC &kp RPAR &kp SEMI>;
            label = "NOTI";
        };

        stringfy: stringfy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp UNDER &kp U &kp T &kp I &kp L &kp S &kp DOT &kp S &kp T &kp R &kp I &kp N &kp G &kp I &kp F &kp Y &kp LS(A) &kp S &kp LS(J) &kp S &kp O &kp N &kp LPAR &kp RPAR>;
            label = "STRINGFY";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB         &kp Q              &kp W                &kp E            &kp R                &kp T                                     &mmv MOVE_UP                     &kp Y        &kp U                 &kp I             &kp O                 &kp P                  &kp BSPC
&kp ESCAPE      &hml LEFT_SHIFT A  &hml LEFT_CONTROL S  &hml LEFT_ALT D  &hml LEFT_COMMAND F  &kp G                     &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H        &hmr RIGHT_COMMAND J  &hmr RIGHT_ALT K  &hmr RIGHT_CONTROL L  &hmr RIGHT_SHIFT SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z              &kp X                &kp C            &kp V                &kp B        &kp SPACE                    &mmv MOVE_DOWN                   &kp N        &kp M                 &kp COMMA         &kp DOT               &kp FSLH               &kp RIGHT_SHIFT
                                                        &kp LGUI         &mo 1                &lt 3 ENTER                                                                &lt 3 SPACE  &mo 2                 &kp RALT
            >;

            // sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            sensor-bindings = <&inc_dec_kp N2 N1>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans          &kp N1           &kp N2          &kp N3            &kp N4        &kp N5                                         &mmv MOVE_UP                     &kp N6           &kp N7             &kp N8           &kp N9           &kp N0    &kp BSPC
&kp ESCAPE      &trans           &bt BT_SEL 0    &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_SEL 3                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN           &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&kp LEFT_SHIFT  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans            &trans        &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp RIGHT_SHIFT
                                                 &kp LEFT_COMMAND  &trans        &kp ENTER                                                                       &kp SPACE        &kp RIGHT_CONTROL  &kp RIGHT_ALT
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH  &kp DLLR  &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &trans        &stringfy     &noti     &print    &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none     &none     &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &trans    &trans    &kp SPACE                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2     &kp F3       &kp F4  &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&bt BT_CLR_ALL  &bt BT_CLR  &mkp LCLK  &mkp MCLK    &print  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &sys_reset  &trans     &bootloader  &trans  &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                       &trans       &trans  &trans                                                                   &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
